"""Initial migration

Revision ID: cbb0e48266e6
Revises: 
Create Date: 2024-07-19 17:09:39.496420

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'cbb0e48266e6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teacher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('father_name', sa.String(length=100), nullable=False),
    sa.Column('cnic', sa.String(length=15), nullable=False),
    sa.Column('education', sa.String(length=20), nullable=False),
    sa.Column('degree_name', sa.String(length=100), nullable=False),
    sa.Column('experience', sa.String(length=50), nullable=False),
    sa.Column('mobile_number', sa.String(length=15), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cnic'),
    sa.UniqueConstraint('mobile_number')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('role_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('permission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sub_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sub_course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('duration_from', sa.Date(), nullable=True),
    sa.Column('duration_to', sa.Date(), nullable=True),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('query',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subcategory_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=True),
    sa.Column('phone1', sa.String(length=20), nullable=True),
    sa.Column('phone2', sa.String(length=20), nullable=True),
    sa.Column('mobile', sa.String(length=20), nullable=True),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['status_id'], ['status.id'], ),
    sa.ForeignKeyConstraint(['subcategory_id'], ['sub_category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.String(length=6), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('father_name', sa.String(length=50), nullable=False),
    sa.Column('qualification', sa.String(length=50), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('session', sa.String(length=50), nullable=False),
    sa.Column('dob', sa.Date(), nullable=False),
    sa.Column('street', sa.String(length=100), nullable=True),
    sa.Column('town', sa.String(length=50), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('zipcode', sa.String(length=10), nullable=True),
    sa.Column('cnic', sa.String(length=15), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('mobile', sa.String(length=20), nullable=True),
    sa.Column('primary_contact', sa.String(length=20), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=False),
    sa.Column('reference_name', sa.String(length=50), nullable=True),
    sa.Column('reference_contact', sa.String(length=20), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('subcourse_id', sa.Integer(), nullable=False),
    sa.Column('remarks', sa.String(length=200), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('admission_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['subcourse_id'], ['sub_course.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cnic'),
    sa.UniqueConstraint('student_id')
    )
    op.create_table('teacher_course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('subcourse_id', sa.Integer(), nullable=False),
    sa.Column('date_assigned', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['subcourse_id'], ['sub_course.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attendance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('subcourse_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=10), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.ForeignKeyConstraint(['subcourse_id'], ['sub_course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('subcourse_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('fee_amount', sa.Float(), nullable=False),
    sa.Column('discount_amount', sa.Float(), nullable=True),
    sa.Column('discount_percentage', sa.Float(), nullable=True),
    sa.Column('net_fee', sa.Float(), nullable=False),
    sa.Column('installment_type', sa.String(length=10), nullable=False),
    sa.Column('year', sa.String(length=10), nullable=True),
    sa.Column('month', sa.String(length=10), nullable=True),
    sa.Column('payment_made', sa.Float(), nullable=True),
    sa.Column('other_charges', sa.Float(), nullable=True),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('admission_fee', sa.Float(), nullable=True),
    sa.Column('admission_discount', sa.Float(), nullable=True),
    sa.Column('balance_admission_fee', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.ForeignKeyConstraint(['subcourse_id'], ['sub_course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('subcourse_id', sa.Integer(), nullable=False),
    sa.Column('date_assigned', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.ForeignKeyConstraint(['subcourse_id'], ['sub_course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_course')
    op.drop_table('fee')
    op.drop_table('attendance')
    op.drop_table('teacher_course')
    op.drop_table('student')
    op.drop_table('query')
    op.drop_table('user_roles')
    op.drop_table('sub_course')
    op.drop_table('sub_category')
    op.drop_table('role_permissions')
    op.drop_table('user')
    op.drop_table('teacher')
    op.drop_table('status')
    op.drop_table('role')
    op.drop_table('permission')
    op.drop_table('course')
    op.drop_table('category')
    # ### end Alembic commands ###
